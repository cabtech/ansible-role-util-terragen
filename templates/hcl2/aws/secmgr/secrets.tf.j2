{#
aws:
  regions: 1+
  - secmgr:
      secrets: 0+
      - name:        string required
        description: string required
        issuer:      string required
        data:        list(string) required
#}
# MANAGED_BY_ANSIBLE
# --------------------------------
{%	if aws is defined %}
{%		for region in aws.regions %}
{%			set USLUG = region.slug | replace ("-", "_") %}
{%			if region.secmgr is defined %}
{%				if region.secmgr.secrets is defined %}
{%					for secret in region.secmgr.secrets %}
{%						set BUILDER = secret.issuer | default("core") %}
{%						set HANDLE = USLUG + "_" + BUILDER + "_" + secret.name %}

variable "sms_{{ HANDLE }}_placeholder" {
  type = map(string)
  default = {
{%						for item in secret.data %}
    "{{ item }}" = "dummy"
{%						endfor %}
  }
}

resource "aws_secretsmanager_secret" "{{ HANDLE }}" {
  name        = "sms-{{ region.slug }}-{{ BUILDER }}-{{ secret.name }}"
  description = "{{ secret.description }}"

  tags = {
    Acct          = "{{ aws.acct.code }}"
    Datacentre    = "{{ region.slug }}"
    Formatting_13 = "ignore"
    Name          = "sms-{{ region.slug }}-{{ BUILDER }}-{{ secret.name }}"
    Product       = "{{ aws.product }}"
    Region        = "{{ region.code }}"
  }
}

resource "aws_secretsmanager_secret_version" "{{ HANDLE }}" {
  secret_id     = aws_secretsmanager_secret.{{ HANDLE }}.id
  secret_string = jsonencode(var.sms_{{ HANDLE }}_placeholder)

  lifecycle {
    ignore_changes = [secret_string]
  }
}
{%					endfor %}
{%				endif %}
{%			endif %}
{%		endfor %}
{%	endif %}

# --------------------------------
